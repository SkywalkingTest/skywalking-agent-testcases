---

registryItems:
  applications:
    - {cassandra-scenario: nq 0}
  instances:
    - {cassandra-scenario: 1}
  operationNames:
    - cassandra-scenario: [Cassandra/executeAsync, /case/cassandra]
segmentItems:
  - applicationCode: cassandra-scenario
    segmentSize: ge 1
    segments:
      - segmentId: not null
        spans:
          - operationName: Cassandra/executeAsync
            operationId: eq 0
            parentSpanId: 0
            spanId: 1
            tags:
              - {key: "db.type", value: "cassandra"}
              - {key: "db.instance", value: ""}
              - {key: "db.statement", value: "CREATE KEYSPACE IF NOT EXISTS demo WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1}"}
            startTime: nq 0
            endTime: nq 0
            isError: false
            spanLayer: Database
            spanType: Exit
            componentName: ""
            componentId: 69
            peer: cassandra-server:9042
            peerId: eq 0
          - operationName: Cassandra/executeAsync
            operationId: eq 0
            parentSpanId: 0
            spanId: 2
            tags:
              - {key: "db.type", value: "cassandra"}
              - {key: "db.instance", value: ""}
              - {key: "db.statement", value: "CREATE TABLE IF NOT EXISTS demo.test(id TEXT PRIMARY KEY, value TEXT)"}
            startTime: nq 0
            endTime: nq 0
            isError: false
            spanLayer: Database
            spanType: Exit
            componentName: ""
            componentId: 69
            peer: cassandra-server:9042
            peerId: eq 0
          - operationName: Cassandra/executeAsync
            operationId: eq 0
            parentSpanId: 0
            spanId: 3
            tags:
              - {key: "db.type", value: "cassandra"}
              - {key: "db.instance", value: "demo"}
              - {key: "db.statement", value: "INSERT INTO demo.test(id, value) VALUES(?,?)"}
            startTime: nq 0
            endTime: nq 0
            isError: false
            spanLayer: Database
            spanType: Exit
            componentName: ""
            componentId: 69
            peer: cassandra-server:9042
            peerId: eq 0
          - operationName: Cassandra/executeAsync
            operationId: eq 0
            parentSpanId: 0
            spanId: 4
            tags:
              - {key: "db.type", value: "cassandra"}
              - {key: "db.instance", value: "demo"}
              - {key: "db.statement", value: "SELECT * FROM demo.test WHERE id = ?"}
            startTime: nq 0
            endTime: nq 0
            isError: false
            spanLayer: Database
            spanType: Exit
            componentName: ""
            componentId: 69
            peer: cassandra-server:9042
            peerId: eq 0
          - operationName: Cassandra/executeAsync
            operationId: eq 0
            parentSpanId: 0
            spanId: 5
            tags:
              - {key: "db.type", value: "cassandra"}
              - {key: "db.instance", value: "demo"}
              - {key: "db.statement", value: "DELETE FROM demo.test WHERE id = ?"}
            startTime: nq 0
            endTime: nq 0
            isError: false
            spanLayer: Database
            spanType: Exit
            componentName: ""
            componentId: 69
            peer: cassandra-server:9042
            peerId: eq 0
          - operationName: Cassandra/executeAsync
            operationId: eq 0
            parentSpanId: 0
            spanId: 6
            tags:
              - {key: "db.type", value: "cassandra"}
              - {key: "db.instance", value: ""}
              - {key: "db.statement", value: "DROP TABLE IF EXISTS demo.test"}
            startTime: nq 0
            endTime: nq 0
            isError: false
            spanLayer: Database
            spanType: Exit
            componentName: ""
            componentId: 69
            peer: cassandra-server:9042
            peerId: eq 0
          - operationName: Cassandra/executeAsync
            operationId: eq 0
            parentSpanId: 0
            spanId: 7
            tags:
              - {key: "db.type", value: "cassandra"}
              - {key: "db.instance", value: ""}
              - {key: "db.statement", value: "DROP KEYSPACE IF EXISTS demo"}
            startTime: nq 0
            endTime: nq 0
            isError: false
            spanLayer: Database
            spanType: Exit
            componentName: ""
            componentId: 69
            peer: cassandra-server:9042
            peerId: eq 0
          - operationName: /case/cassandra
            operationId: eq 0
            parentSpanId: -1
            spanId: 0
            startTime: nq 0
            endTime: nq 0
            spanLayer: Http
            isError: false
            spanType: Entry
            componentName: ""
            componentId: 14
            tags:
              - {key: url, value: "http://localhost:{SERVER_OUTPUT_PORT}/cassandra-case/case/cassandra"}
              - {key: http.method, value: GET}
            logs: []
            peer: ""
            peerId: eq 0

...