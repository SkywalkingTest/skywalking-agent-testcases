registryItems:
  applications:
  - {spring-with-qualified-op-name-scenario: nq 0}
  instances:
  - {spring-with-qualified-op-name-scenario: 1}
  operationNames:
  - spring-with-qualified-op-name-scenario: [
    "test.apache.skywalking.testcase.qualifiedname.controller.SpringEndpointQualifiedNameController.acceptAllImplicit()",
    "/spring-with-qualified-op-name-scenario/qualifiedname/acceptAllImplicit",
    "/spring-with-qualified-op-name-scenario/qualifiedname/acceptAllExplicit",
    "test.apache.skywalking.testcase.qualifiedname.controller.SpringEndpointQualifiedNameController.qualifiedNameCase()",
    "test.apache.skywalking.testcase.qualifiedname.controller.SpringEndpointQualifiedNameController.acceptAllExplicit()"
  ]
segmentItems:
- applicationCode: spring-with-qualified-op-name-scenario
  segmentSize: 3
  segments:
  - segmentId: nq 0
    spans:
    - operationName: test.apache.skywalking.testcase.qualifiedname.controller.SpringEndpointQualifiedNameController.acceptAllImplicit()
      operationId: 0
      parentSpanId: -1
      spanId: 0
      spanLayer: Http
      tags:
      - {key: "url", value: "http://localhost:8080/spring-with-qualified-op-name-scenario/qualifiedname/acceptAllImplicit"}
      - {key: "http.method", value: "GET"}
      refs:
      - {parentEndpointId: 0, parentEndpoint: "test.apache.skywalking.testcase.qualifiedname.controller.SpringEndpointQualifiedNameController.qualifiedNameCase()",
         networkAddressId: 0, entryEndpointId: 0, refType: CrossProcess, parentSpanId: 1,
         parentTraceSegmentId: '${spring-with-qualified-op-name-scenario[2]}', parentServiceInstanceId: 1,
         networkAddress: "localhost:8080", entryEndpoint: "test.apache.skywalking.testcase.qualifiedname.controller.SpringEndpointQualifiedNameController.qualifiedNameCase()",
         entryServiceInstanceId: 1}
      startTime: nq 0
      endTime: nq 0
      componentId: 14
      componentName: ""
      isError: false
      spanType: Entry
      peer: ""
      peerId: 0
  - segmentId: nq 0
    spans:
    - operationName: "test.apache.skywalking.testcase.qualifiedname.controller.SpringEndpointQualifiedNameController.acceptAllExplicit()"
      operationId: 0
      parentSpanId: -1
      spanId: 0
      spanLayer: Http
      tags:
      - {key: "url", value: "http://localhost:8080/spring-with-qualified-op-name-scenario/qualifiedname/acceptAllExplicit"}
      - {key: "http.method", value: "POST"}
      refs:
      - {parentEndpointId: 0, parentEndpoint: "test.apache.skywalking.testcase.qualifiedname.controller.SpringEndpointQualifiedNameController.qualifiedNameCase()",
         networkAddressId: 0, entryEndpointId: 0, refType: CrossProcess, parentSpanId: 2,
         parentTraceSegmentId: '${spring-with-qualified-op-name-scenario[2]}', parentServiceInstanceId: 1,
         networkAddress: "localhost:8080", entryEndpoint: "test.apache.skywalking.testcase.qualifiedname.controller.SpringEndpointQualifiedNameController.qualifiedNameCase()",
         entryServiceInstanceId: 1}
      startTime: nq 0
      endTime: nq 0
      componentId: 14
      componentName: ""
      isError: false
      spanType: Entry
      peer: ""
      peerId: 0
  - segmentId: nq 0
    spans:
    - operationName: "/spring-with-qualified-op-name-scenario/qualifiedname/acceptAllImplicit"
      operationId: 0
      parentSpanId: 0
      spanId: 1
      spanLayer: Http
      tags:
      - {key: "url", value: "http://localhost:8080/spring-with-qualified-op-name-scenario/qualifiedname/acceptAllImplicit"}
      - {key: "http.method", value: "GET"}
      startTime: nq 0
      endTime: nq 0
      componentId: 13
      componentName: ""
      isError: false
      spanType: Exit
      peer: "localhost:8080"
      peerId: 0
    - operationName: "/spring-with-qualified-op-name-scenario/qualifiedname/acceptAllExplicit"
      operationId: 0
      parentSpanId: 0
      spanId: 2
      spanLayer: Http
      tags:
      - {key: "url", value: "http://localhost:8080/spring-with-qualified-op-name-scenario/qualifiedname/acceptAllExplicit"}
      - {key: "http.method", value: "POST"}
      startTime: nq 0
      endTime: nq 0
      componentId: 13
      componentName: ""
      isError: false
      spanType: Exit
      peer: "localhost:8080"
      peerId: 0
    - operationName: "test.apache.skywalking.testcase.qualifiedname.controller.SpringEndpointQualifiedNameController.qualifiedNameCase()"
      operationId: 0
      parentSpanId: -1
      spanId: 0
      spanLayer: Http
      tags:
      - {key: "url", value: "http://localhost:{SERVER_OUTPUT_PORT}/spring-with-qualified-op-name-scenario/qualifiedname/qualifiedname-case"}
      - {key: "http.method", value: "GET"}
      startTime: nq 0
      endTime: nq 0
      componentId: 14
      componentName: ""
      isError: false
      spanType: Entry
      peer: ""
      peerId: 0
